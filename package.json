{
  "name": "groog",
  "displayName": "groog",
  "description": "",
  "version": "0.0.72",
  "publisher": "groogle",
  "browser": "./dist/web/extension.js",
  "engines": {
    "vscode": "^1.64.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/leep-frog/vs-code"
  },
  "categories": [
    "Other"
  ],
  "scripts": {
    "compile-web": "webpack",
    "lint": "eslint src --ext ts",
    "package-web": "webpack --mode production --devtool hidden-source-map",
    "pretest": "npm run compile-web",
    "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .",
    "test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js",
    "vscode:prepublish": "npm run package-web",
    "watch-web": "webpack --watch"
  },
  "devDependencies": {
    "@types/mocha": "^9.0.0",
    "@types/vscode": "^1.64.0",
    "@types/webpack-env": "^1.16.3",
    "@typescript-eslint/eslint-plugin": "^5.9.1",
    "@typescript-eslint/parser": "^5.9.1",
    "@vscode/test-web": "^0.0.15",
    "assert": "^2.0.0",
    "eslint": "^8.6.0",
    "mocha": "^9.1.3",
    "process": "^0.11.10",
    "ts-loader": "^9.2.6",
    "typescript": "^4.5.4",
    "webpack": "^5.66.0",
    "webpack-cli": "^4.9.1"
  },
  "activationEvents": [
    "onCommand:groog.ctrlG",
    "onCommand:groog.cursorBottom",
    "onCommand:groog.cursorDown",
    "onCommand:groog.cursorEnd",
    "onCommand:groog.cursorHome",
    "onCommand:groog.cursorLeft",
    "onCommand:groog.cursorRight",
    "onCommand:groog.cursorTop",
    "onCommand:groog.cursorUp",
    "onCommand:groog.cursorWordLeft",
    "onCommand:groog.cursorWordRight",
    "onCommand:groog.deleteLeft",
    "onCommand:groog.deleteRight",
    "onCommand:groog.deleteWordLeft",
    "onCommand:groog.deleteWordRight",
    "onCommand:groog.fall",
    "onCommand:groog.find",
    "onCommand:groog.format",
    "onCommand:groog.jump",
    "onCommand:groog.kill",
    "onCommand:groog.message.info",
    "onCommand:groog.multiCommand.execute",
    "onCommand:groog.paste",
    "onCommand:groog.record.deleteRecording",
    "onCommand:groog.record.endRecording",
    "onCommand:groog.record.find",
    "onCommand:groog.record.findNext",
    "onCommand:groog.record.playNamedRecording",
    "onCommand:groog.record.playRecording",
    "onCommand:groog.record.saveRecordingAs",
    "onCommand:groog.record.startRecording",
    "onCommand:groog.reverseFind",
    "onCommand:groog.toggleMarkMode",
    "onCommand:groog.toggleQMK",
    "onCommand:groog.type",
    "onCommand:groog.undo",
    "onCommand:groog.updateSettings",
    "onCommand:groog.yank"
  ],
  "contributes": {
    "commands": [
      {
        "command": "groog.ctrlG",
        "title": "Emacs Ctrl-G"
      },
      {
        "command": "groog.cursorBottom",
        "title": "Emacs Cursor Bottom"
      },
      {
        "command": "groog.cursorDown",
        "title": "Emacs Cursor Down"
      },
      {
        "command": "groog.cursorEnd",
        "title": "Emacs Cursor End"
      },
      {
        "command": "groog.cursorHome",
        "title": "Emacs Cursor Home"
      },
      {
        "command": "groog.cursorLeft",
        "title": "Emacs Cursor Left"
      },
      {
        "command": "groog.cursorRight",
        "title": "Emacs Cursor Right"
      },
      {
        "command": "groog.cursorTop",
        "title": "Emacs Cursor Top"
      },
      {
        "command": "groog.cursorUp",
        "title": "Emacs Cursor Up"
      },
      {
        "command": "groog.cursorWordLeft",
        "title": "Emacs Cursor Word Left"
      },
      {
        "command": "groog.cursorWordRight",
        "title": "Emacs Cursor Word Right"
      },
      {
        "command": "groog.deleteLeft",
        "title": "Groog delete left"
      },
      {
        "command": "groog.deleteRight",
        "title": "Groog delete right"
      },
      {
        "command": "groog.deleteWordLeft",
        "title": "Groog delete left"
      },
      {
        "command": "groog.deleteWordRight",
        "title": "Groog delete right"
      },
      {
        "command": "groog.fall",
        "title": "Emacs Fall"
      },
      {
        "command": "groog.find",
        "title": "Groog find"
      },
      {
        "command": "groog.format",
        "title": "Groog format"
      },
      {
        "command": "groog.jump",
        "title": "Emacs Jump"
      },
      {
        "command": "groog.kill",
        "title": "Emacs Kill Line"
      },
      {
        "command": "groog.message.info",
        "title": "Groog Info Message"
      },
      {
        "command": "groog.multiCommand.execute",
        "title": "Groog MultiCommand"
      },
      {
        "command": "groog.paste",
        "title": "Emacs Paste"
      },
      {
        "command": "groog.record.deleteRecording",
        "title": "Groog Delete Recording"
      },
      {
        "command": "groog.record.endRecording",
        "title": "Groog End Recording"
      },
      {
        "command": "groog.record.find",
        "title": "Find selection during recording"
      },
      {
        "command": "groog.record.findNext",
        "title": "Find the next selection during recording"
      },
      {
        "command": "groog.record.playNamedRecording",
        "title": "Groog Play Named Recording..."
      },
      {
        "command": "groog.record.playRecording",
        "title": "Groog Play Recording"
      },
      {
        "command": "groog.record.saveRecordingAs",
        "title": "Groog Save Recording As..."
      },
      {
        "command": "groog.record.startRecording",
        "title": "Groog Start Recording"
      },
      {
        "command": "groog.reverseFind",
        "title": "Groog reverse find"
      },
      {
        "command": "groog.toggleMarkMode",
        "title": "Emacs Toggle Mark Mode"
      },
      {
        "command": "groog.toggleQMK",
        "title": "Emacs Toggle QMK"
      },
      {
        "command": "groog.type",
        "title": "Groog Type"
      },
      {
        "command": "groog.undo",
        "title": "Undo"
      },
      {
        "command": "groog.updateSettings",
        "title": "Groog update settings"
      },
      {
        "command": "groog.yank",
        "title": "Emacs Yank"
      }
    ],
    "keybindings": [
      {
        "key": "'",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "'"
        }
      },
      {
        "key": ",",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": ","
        }
      },
      {
        "key": "-",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "-"
        }
      },
      {
        "key": ".",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "."
        }
      },
      {
        "key": "/",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "/"
        }
      },
      {
        "key": "0",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "0"
        }
      },
      {
        "key": "1",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "1"
        }
      },
      {
        "key": "2",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "2"
        }
      },
      {
        "key": "3",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "3"
        }
      },
      {
        "key": "4",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "4"
        }
      },
      {
        "key": "5",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "5"
        }
      },
      {
        "key": "6",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "6"
        }
      },
      {
        "key": "7",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "7"
        }
      },
      {
        "key": "8",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "8"
        }
      },
      {
        "key": "9",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "9"
        }
      },
      {
        "key": ";",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": ";"
        }
      },
      {
        "key": "=",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "="
        }
      },
      {
        "key": "[",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "["
        }
      },
      {
        "key": "\\",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "\\"
        }
      },
      {
        "key": "]",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "]"
        }
      },
      {
        "key": "`",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "`"
        }
      },
      {
        "key": "a",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "a"
        }
      },
      {
        "key": "alt+b",
        "command": "groog.cursorWordLeft"
      },
      {
        "key": "alt+backspace",
        "command": "groog.deleteWordLeft",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "alt+c",
        "command": "toggleSearchEditorCaseSensitive"
      },
      {
        "key": "alt+d",
        "command": "groog.deleteWordRight"
      },
      {
        "key": "alt+delete",
        "command": "groog.deleteWordRight",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "alt+e",
        "command": "groog.record.playRecording",
        "when": "!groog.recording"
      },
      {
        "key": "alt+e",
        "command": "groog.record.endRecording",
        "when": "groog.recording"
      },
      {
        "key": "alt+f",
        "command": "groog.cursorWordRight"
      },
      {
        "key": "alt+f4",
        "command": "toggleSearchWholeWord",
        "when": "groog.qmk \u0026\u0026 !editorFocus \u0026\u0026 !inSearchEditor \u0026\u0026 !searchViewletFocus"
      },
      {
        "key": "alt+f4",
        "command": "toggleFindWholeWord",
        "when": "groog.qmk \u0026\u0026 editorFocus"
      },
      {
        "key": "alt+f4",
        "command": "toggleSearchEditorWholeWord",
        "when": "groog.qmk \u0026\u0026 inSearchEditor"
      },
      {
        "key": "alt+f4",
        "command": "toggleSearchWholeWord",
        "when": "groog.qmk \u0026\u0026 searchViewletFocus"
      },
      {
        "key": "alt+g",
        "command": "noop"
      },
      {
        "key": "alt+h",
        "command": "groog.deleteWordLeft"
      },
      {
        "key": "alt+n",
        "command": "workbench.action.editor.nextChange"
      },
      {
        "key": "alt+p",
        "command": "workbench.action.editor.previousChange"
      },
      {
        "key": "alt+r",
        "command": "toggleSearchEditorRegex"
      },
      {
        "key": "alt+s",
        "command": "editor.action.startFindReplaceAction"
      },
      {
        "key": "alt+shift+d",
        "command": "groog.record.deleteRecording"
      },
      {
        "key": "alt+shift+e",
        "command": "groog.record.playNamedRecording",
        "when": "!groog.recording"
      },
      {
        "key": "alt+shift+e",
        "command": "groog.record.saveRecordingAs",
        "when": "groog.recording"
      },
      {
        "key": "alt+shift+t",
        "command": "workbench.action.terminal.newWithProfile"
      },
      {
        "key": "alt+t",
        "command": "workbench.action.terminal.newInActiveWorkspace"
      },
      {
        "key": "alt+x",
        "command": "workbench.action.showCommands"
      },
      {
        "key": "alt+y",
        "command": "editor.action.clipboardPasteAction"
      },
      {
        "key": "alt+z",
        "command": "git.revertSelectedRanges"
      },
      {
        "key": "b",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "b"
        }
      },
      {
        "key": "backspace",
        "command": "search.action.remove",
        "when": "!searchInputBoxFocus \u0026\u0026 searchViewletFocus"
      },
      {
        "key": "backspace",
        "command": "groog.deleteLeft",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "c",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "c"
        }
      },
      {
        "key": "ctrl+,",
        "command": "workbench.action.openSettings",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+,",
        "command": "groog.multiCommand.execute",
        "when": "activePanel",
        "args": {
          "sequence": [
            "workbench.action.closePanel",
            "workbench.action.openSettings"
          ]
        }
      },
      {
        "key": "ctrl+.",
        "command": "workbench.action.openGlobalKeybindings",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+.",
        "command": "groog.multiCommand.execute",
        "when": "activePanel",
        "args": {
          "sequence": [
            "workbench.action.closePanel",
            "workbench.action.openGlobalKeybindings"
          ]
        }
      },
      {
        "key": "ctrl+/",
        "command": "groog.undo",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+;",
        "command": "editor.action.commentLine"
      },
      {
        "key": "ctrl+a",
        "command": "groog.cursorHome",
        "when": "!groog.qmk"
      },
      {
        "key": "ctrl+a",
        "command": "editor.action.selectAll",
        "when": "groog.qmk"
      },
      {
        "key": "ctrl+b",
        "command": "groog.cursorLeft",
        "when": "!inQuickOpen"
      },
      {
        "key": "ctrl+b",
        "command": "workbench.action.quickPickManyToggle",
        "when": "inQuickOpen"
      },
      {
        "key": "ctrl+backspace",
        "command": "groog.deleteWordLeft",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+backspace",
        "command": "workbench.action.terminal.sendSequence",
        "when": "groog.qmk \u0026\u0026 panelFocus",
        "args": {
          "text": "\u0008"
        }
      },
      {
        "key": "ctrl+d",
        "command": "groog.deleteRight",
        "when": "!searchViewletFocus"
      },
      {
        "key": "ctrl+d",
        "command": "search.action.remove",
        "when": "searchViewletFocus"
      },
      {
        "key": "ctrl+delete",
        "command": "groog.deleteWordRight",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "ctrl+e",
        "command": "groog.cursorEnd"
      },
      {
        "key": "ctrl+f",
        "command": "groog.cursorRight",
        "when": "!groog.qmk \u0026\u0026 !inQuickOpen"
      },
      {
        "key": "ctrl+f",
        "command": "workbench.action.quickPickManyToggle",
        "when": "!groog.qmk \u0026\u0026 inQuickOpen"
      },
      {
        "key": "ctrl+f",
        "command": "groog.find",
        "when": "groog.qmk \u0026\u0026 !groog.recording"
      },
      {
        "key": "ctrl+f",
        "command": "groog.record.findNext",
        "when": "groog.qmk \u0026\u0026 groog.recording"
      },
      {
        "key": "ctrl+f",
        "command": "workbench.action.terminal.focusFind",
        "when": "groog.qmk \u0026\u0026 terminalFocus"
      },
      {
        "key": "ctrl+g",
        "command": "groog.ctrlG",
        "when": "!sideBarFocus \u0026\u0026 !inQuickOpen \u0026\u0026 !suggestWidgetVisible"
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen \u0026\u0026 !suggestWidgetVisible"
      },
      {
        "key": "ctrl+g",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus \u0026\u0026 !inQuickOpen \u0026\u0026 !suggestWidgetVisible"
      },
      {
        "key": "ctrl+g",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible"
      },
      {
        "key": "ctrl+h",
        "command": "groog.deleteLeft",
        "when": "!searchViewletFocus"
      },
      {
        "key": "ctrl+h",
        "command": "search.action.remove",
        "when": "searchViewletFocus"
      },
      {
        "key": "ctrl+i",
        "command": "editor.action.indentLines"
      },
      {
        "key": "ctrl+j",
        "command": "groog.toggleMarkMode",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+j",
        "command": "workbench.action.previousPanelView",
        "when": "activePanel"
      },
      {
        "key": "ctrl+k",
        "command": "groog.kill"
      },
      {
        "key": "ctrl+l",
        "command": "groog.jump",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+l",
        "command": "workbench.action.nextPanelView",
        "when": "activePanel"
      },
      {
        "key": "ctrl+left",
        "command": "groog.cursorWordLeft",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
      },
      {
        "key": "ctrl+n",
        "command": "groog.cursorDown",
        "when": "editorTextFocus \u0026\u0026 !suggestWidgetVisible"
      },
      {
        "key": "ctrl+n",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus \u0026\u0026 suggestWidgetVisible"
      },
      {
        "key": "ctrl+n",
        "command": "editor.action.nextMatchFindAction",
        "when": "groog.findMode"
      },
      {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inQuickOpen"
      },
      {
        "key": "ctrl+n",
        "command": "search.action.focusSearchList",
        "when": "searchInputBoxFocus"
      },
      {
        "key": "ctrl+n",
        "command": "groog.multiCommand.execute",
        "when": "searchViewletFocus",
        "args": {
          "sequence": [
            "search.action.focusNextSearchResult",
            "search.action.focusSearchList"
          ]
        }
      },
      {
        "key": "ctrl+o",
        "command": "workbench.action.focusNextGroup",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+o",
        "command": "workbench.action.terminal.focusNext",
        "when": "activePanel"
      },
      {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
      },
      {
        "key": "ctrl+p",
        "command": "groog.cursorUp",
        "when": "editorTextFocus \u0026\u0026 !suggestWidgetVisible"
      },
      {
        "key": "ctrl+p",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus \u0026\u0026 suggestWidgetVisible"
      },
      {
        "key": "ctrl+p",
        "command": "editor.action.previousMatchFindAction",
        "when": "groog.findMode"
      },
      {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inQuickOpen"
      },
      {
        "key": "ctrl+p",
        "command": "groog.multiCommand.execute",
        "when": "searchViewletFocus",
        "args": {
          "sequence": [
            "search.action.focusPreviousSearchResult",
            "search.action.focusSearchList"
          ]
        }
      },
      {
        "key": "ctrl+pagedown",
        "command": "workbench.action.focusNextGroup",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+pagedown",
        "command": "workbench.action.terminal.focusNext",
        "when": "activePanel"
      },
      {
        "key": "ctrl+pageup",
        "command": "workbench.action.focusPreviousGroup",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+pageup",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "activePanel"
      },
      {
        "key": "ctrl+q",
        "command": "workbench.action.closeEditorsAndGroup",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+q",
        "command": "groog.message.info",
        "when": "activePanel",
        "args": {
          "message": "Run ctrl+shift+q to kill the terminal"
        }
      },
      {
        "key": "ctrl+r",
        "command": "groog.reverseFind"
      },
      {
        "key": "ctrl+right",
        "command": "groog.cursorWordRight",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "ctrl+s",
        "command": "groog.find",
        "when": "!groog.qmk \u0026\u0026 !groog.recording"
      },
      {
        "key": "ctrl+s",
        "command": "groog.record.findNext",
        "when": "!groog.qmk \u0026\u0026 groog.recording"
      },
      {
        "key": "ctrl+s",
        "command": "workbench.action.terminal.focusFind",
        "when": "!groog.qmk \u0026\u0026 terminalFocus"
      },
      {
        "key": "ctrl+s",
        "command": "groog.cursorRight",
        "when": "groog.qmk"
      },
      {
        "key": "ctrl+shift+a",
        "command": "editor.action.selectAll"
      },
      {
        "key": "ctrl+shift+d",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.splitEditorRight",
            "editor.action.revealDefinition"
          ]
        }
      },
      {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles",
        "when": "groog.qmk \u0026\u0026 !groog.recording"
      },
      {
        "key": "ctrl+shift+f",
        "command": "groog.record.find",
        "when": "groog.qmk \u0026\u0026 groog.recording"
      },
      {
        "key": "ctrl+shift+h",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.splitEditorRight",
            "workbench.action.quickOpen"
          ]
        }
      },
      {
        "key": "ctrl+shift+home",
        "command": "editor.action.selectAll"
      },
      {
        "key": "ctrl+shift+n",
        "command": "workbench.action.files.newUntitledFile"
      },
      {
        "key": "ctrl+shift+q",
        "command": "workbench.action.terminal.kill",
        "when": "activePanel"
      },
      {
        "key": "ctrl+shift+s",
        "command": "workbench.action.findInFiles",
        "when": "!groog.qmk \u0026\u0026 !groog.recording"
      },
      {
        "key": "ctrl+shift+s",
        "command": "groog.record.find",
        "when": "!groog.qmk \u0026\u0026 groog.recording"
      },
      {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.newInActiveWorkspace"
      },
      {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.focusPreviousGroup",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "activePanel"
      },
      {
        "key": "ctrl+shift+v",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.splitEditorDown",
            "workbench.action.quickOpen"
          ]
        }
      },
      {
        "key": "ctrl+t",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+t",
        "command": "workbench.action.closePanel",
        "when": "activePanel"
      },
      {
        "key": "ctrl+tab",
        "command": "workbench.action.focusNextGroup",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+tab",
        "command": "workbench.action.terminal.focusNext",
        "when": "activePanel"
      },
      {
        "key": "ctrl+u",
        "command": "workbench.action.focusPreviousGroup",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+u",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "activePanel"
      },
      {
        "key": "ctrl+v",
        "command": "groog.fall"
      },
      {
        "key": "ctrl+w",
        "command": "groog.yank"
      },
      {
        "key": "ctrl+x ,",
        "command": "workbench.action.openSettingsJson",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+x ctrl+,",
        "command": "workbench.action.openSettingsJson",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+x ,",
        "command": "groog.multiCommand.execute",
        "when": "activePanel",
        "args": {
          "sequence": [
            "workbench.action.closePanel",
            "workbench.action.openSettingsJson"
          ]
        }
      },
      {
        "key": "ctrl+x ctrl+,",
        "command": "groog.multiCommand.execute",
        "when": "activePanel",
        "args": {
          "sequence": [
            "workbench.action.closePanel",
            "workbench.action.openSettingsJson"
          ]
        }
      },
      {
        "key": "ctrl+x .",
        "command": "workbench.action.openGlobalKeybindingsFile",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+x ctrl+.",
        "command": "workbench.action.openGlobalKeybindingsFile",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+x .",
        "command": "groog.multiCommand.execute",
        "when": "activePanel",
        "args": {
          "sequence": [
            "workbench.action.closePanel",
            "workbench.action.openGlobalKeybindingsFile"
          ]
        }
      },
      {
        "key": "ctrl+x ctrl+.",
        "command": "groog.multiCommand.execute",
        "when": "activePanel",
        "args": {
          "sequence": [
            "workbench.action.closePanel",
            "workbench.action.openGlobalKeybindingsFile"
          ]
        }
      },
      {
        "key": "ctrl+x b",
        "command": "editor.action.jumpToBracket"
      },
      {
        "key": "ctrl+x ctrl+b",
        "command": "editor.action.jumpToBracket"
      },
      {
        "key": "ctrl+x c",
        "command": "workbench.action.terminal.sendSequence",
        "when": "activePanel",
        "args": {
          "text": "\u0018\u0003"
        }
      },
      {
        "key": "ctrl+x ctrl+c",
        "command": "workbench.action.terminal.sendSequence",
        "when": "activePanel",
        "args": {
          "text": "\u0018\u0003"
        }
      },
      {
        "key": "ctrl+x d",
        "command": "editor.action.revealDefinition"
      },
      {
        "key": "ctrl+x ctrl+d",
        "command": "editor.action.revealDefinition"
      },
      {
        "key": "ctrl+x e",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.view.extensions",
            "workbench.extensions.action.checkForUpdates"
          ]
        }
      },
      {
        "key": "ctrl+x ctrl+e",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.view.extensions",
            "workbench.extensions.action.checkForUpdates"
          ]
        }
      },
      {
        "key": "ctrl+x f",
        "command": "workbench.action.quickOpen",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+x ctrl+f",
        "command": "workbench.action.quickOpen",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+x f",
        "command": "groog.multiCommand.execute",
        "when": "activePanel",
        "args": {
          "sequence": [
            "workbench.action.closePanel",
            "workbench.action.quickOpen"
          ]
        }
      },
      {
        "key": "ctrl+x ctrl+f",
        "command": "groog.multiCommand.execute",
        "when": "activePanel",
        "args": {
          "sequence": [
            "workbench.action.closePanel",
            "workbench.action.quickOpen"
          ]
        }
      },
      {
        "key": "ctrl+x h",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.splitEditorRight",
            "workbench.action.focusPreviousGroup"
          ]
        }
      },
      {
        "key": "ctrl+x ctrl+h",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.splitEditorRight",
            "workbench.action.focusPreviousGroup"
          ]
        }
      },
      {
        "key": "ctrl+x i",
        "command": "editor.action.organizeImports"
      },
      {
        "key": "ctrl+x ctrl+i",
        "command": "editor.action.organizeImports"
      },
      {
        "key": "ctrl+x k",
        "command": "groog.toggleQMK"
      },
      {
        "key": "ctrl+x ctrl+k",
        "command": "groog.toggleQMK"
      },
      {
        "key": "ctrl+x l",
        "command": "workbench.action.gotoLine"
      },
      {
        "key": "ctrl+x ctrl+l",
        "command": "workbench.action.gotoLine"
      },
      {
        "key": "ctrl+x m",
        "command": "markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+x ctrl+m",
        "command": "markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
      },
      {
        "key": "ctrl+x n",
        "command": "groog.cursorBottom",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+x ctrl+n",
        "command": "groog.cursorBottom",
        "when": "!activePanel"
      },
      {
        "key": "ctrl+x n",
        "command": "workbench.action.terminal.rename",
        "when": "activePanel"
      },
      {
        "key": "ctrl+x ctrl+n",
        "command": "workbench.action.terminal.rename",
        "when": "activePanel"
      },
      {
        "key": "ctrl+x o",
        "command": "workbench.action.openRecent"
      },
      {
        "key": "ctrl+x ctrl+o",
        "command": "workbench.action.openRecent"
      },
      {
        "key": "ctrl+x p",
        "command": "groog.cursorTop"
      },
      {
        "key": "ctrl+x ctrl+p",
        "command": "groog.cursorTop"
      },
      {
        "key": "ctrl+x q",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "ctrl+x ctrl+q",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "ctrl+x r",
        "command": "workbench.action.reloadWindow"
      },
      {
        "key": "ctrl+x ctrl+r",
        "command": "workbench.action.reloadWindow"
      },
      {
        "key": "ctrl+x s",
        "command": "workbench.action.files.save"
      },
      {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save"
      },
      {
        "key": "ctrl+x shift+insert",
        "command": "editor.action.clipboardPasteAction"
      },
      {
        "key": "ctrl+x ctrl+shift+insert",
        "command": "editor.action.clipboardPasteAction"
      },
      {
        "key": "ctrl+x t",
        "command": "go.test.package"
      },
      {
        "key": "ctrl+x ctrl+t",
        "command": "go.test.package"
      },
      {
        "key": "ctrl+x tab",
        "command": "groog.format"
      },
      {
        "key": "ctrl+x ctrl+tab",
        "command": "groog.format"
      },
      {
        "key": "ctrl+x v",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.splitEditorDown",
            "workbench.action.focusPreviousGroup"
          ]
        }
      },
      {
        "key": "ctrl+x ctrl+v",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.splitEditorDown",
            "workbench.action.focusPreviousGroup"
          ]
        }
      },
      {
        "key": "ctrl+x x",
        "command": "groog.record.startRecording"
      },
      {
        "key": "ctrl+x ctrl+x",
        "command": "groog.record.startRecording"
      },
      {
        "key": "ctrl+x y",
        "command": "editor.action.clipboardPasteAction"
      },
      {
        "key": "ctrl+x ctrl+y",
        "command": "editor.action.clipboardPasteAction"
      },
      {
        "key": "ctrl+x z",
        "command": "workbench.action.togglePanel"
      },
      {
        "key": "ctrl+x ctrl+z",
        "command": "workbench.action.togglePanel"
      },
      {
        "key": "ctrl+y",
        "command": "groog.paste"
      },
      {
        "key": "ctrl+z",
        "command": "workbench.action.terminal.sendSequence",
        "when": "activePanel",
        "args": {
          "text": "\u001f"
        }
      },
      {
        "key": "d",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "d"
        }
      },
      {
        "key": "delete",
        "command": "search.action.remove",
        "when": "!searchInputBoxFocus \u0026\u0026 searchViewletFocus"
      },
      {
        "key": "delete",
        "command": "groog.deleteRight",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "down",
        "command": "groog.cursorDown",
        "when": "editorTextFocus \u0026\u0026 !suggestWidgetVisible"
      },
      {
        "key": "down",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus \u0026\u0026 suggestWidgetVisible"
      },
      {
        "key": "down",
        "command": "editor.action.nextMatchFindAction",
        "when": "groog.findMode"
      },
      {
        "key": "down",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inQuickOpen"
      },
      {
        "key": "down",
        "command": "search.action.focusSearchList",
        "when": "searchInputBoxFocus"
      },
      {
        "key": "e",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "e"
        }
      },
      {
        "key": "end",
        "command": "groog.cursorEnd",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "enter",
        "command": "editor.action.nextMatchFindAction",
        "when": "groog.findMode"
      },
      {
        "key": "enter",
        "command": "groog.type",
        "when": "groog.recording",
        "args": {
          "text": "\n"
        }
      },
      {
        "key": "f",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "f"
        }
      },
      {
        "key": "g",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "g"
        }
      },
      {
        "key": "h",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "h"
        }
      },
      {
        "key": "home",
        "command": "groog.cursorHome",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "i",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "i"
        }
      },
      {
        "key": "j",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "j"
        }
      },
      {
        "key": "k",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "k"
        }
      },
      {
        "key": "l",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "l"
        }
      },
      {
        "key": "left",
        "command": "groog.cursorLeft",
        "when": "editorTextFocus \u0026\u0026 !inQuickOpen"
      },
      {
        "key": "left",
        "command": "workbench.action.quickPickManyToggle",
        "when": "inQuickOpen"
      },
      {
        "key": "m",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "m"
        }
      },
      {
        "key": "n",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "n"
        }
      },
      {
        "key": "o",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "o"
        }
      },
      {
        "key": "p",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "p"
        }
      },
      {
        "key": "pagedown",
        "command": "groog.fall",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "pageup",
        "command": "groog.jump",
        "when": "editorTextFocus || findInputFocussed"
      },
      {
        "key": "q",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "q"
        }
      },
      {
        "key": "r",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "r"
        }
      },
      {
        "key": "right",
        "command": "groog.cursorRight",
        "when": "editorTextFocus \u0026\u0026 !inQuickOpen"
      },
      {
        "key": "right",
        "command": "workbench.action.quickPickManyToggle",
        "when": "inQuickOpen"
      },
      {
        "key": "s",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "s"
        }
      },
      {
        "key": "shift+'",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "\""
        }
      },
      {
        "key": "shift+,",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "\u003c"
        }
      },
      {
        "key": "shift+-",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "_"
        }
      },
      {
        "key": "shift+.",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "\u003e"
        }
      },
      {
        "key": "shift+/",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "?"
        }
      },
      {
        "key": "shift+0",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": ")"
        }
      },
      {
        "key": "shift+1",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "!"
        }
      },
      {
        "key": "shift+2",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "@"
        }
      },
      {
        "key": "shift+3",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "#"
        }
      },
      {
        "key": "shift+4",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "$"
        }
      },
      {
        "key": "shift+5",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "%"
        }
      },
      {
        "key": "shift+6",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "^"
        }
      },
      {
        "key": "shift+7",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "\u0026"
        }
      },
      {
        "key": "shift+8",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "*"
        }
      },
      {
        "key": "shift+9",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "("
        }
      },
      {
        "key": "shift+;",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": ":"
        }
      },
      {
        "key": "shift+=",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "+"
        }
      },
      {
        "key": "shift+[",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "{"
        }
      },
      {
        "key": "shift+\\",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "|"
        }
      },
      {
        "key": "shift+]",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "}"
        }
      },
      {
        "key": "shift+`",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "~"
        }
      },
      {
        "key": "shift+a",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "A"
        }
      },
      {
        "key": "shift+b",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "B"
        }
      },
      {
        "key": "shift+c",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "C"
        }
      },
      {
        "key": "shift+d",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "D"
        }
      },
      {
        "key": "shift+delete",
        "command": "groog.multiCommand.execute",
        "args": {
          "sequence": [
            "workbench.action.splitEditorRight",
            "editor.action.revealDefinition"
          ]
        }
      },
      {
        "key": "shift+e",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "E"
        }
      },
      {
        "key": "shift+enter",
        "command": "editor.action.previousMatchFindAction",
        "when": "groog.findMode"
      },
      {
        "key": "shift+f",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "F"
        }
      },
      {
        "key": "shift+g",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "G"
        }
      },
      {
        "key": "shift+h",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "H"
        }
      },
      {
        "key": "shift+home",
        "command": "editor.action.selectAll"
      },
      {
        "key": "shift+i",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "I"
        }
      },
      {
        "key": "shift+j",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "J"
        }
      },
      {
        "key": "shift+k",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "K"
        }
      },
      {
        "key": "shift+l",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "L"
        }
      },
      {
        "key": "shift+m",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "M"
        }
      },
      {
        "key": "shift+n",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "N"
        }
      },
      {
        "key": "shift+o",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "O"
        }
      },
      {
        "key": "shift+p",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "P"
        }
      },
      {
        "key": "shift+pageup",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
      },
      {
        "key": "shift+q",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "Q"
        }
      },
      {
        "key": "shift+r",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "R"
        }
      },
      {
        "key": "shift+s",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "S"
        }
      },
      {
        "key": "shift+space",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": " "
        }
      },
      {
        "key": "shift+t",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "T"
        }
      },
      {
        "key": "shift+u",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "U"
        }
      },
      {
        "key": "shift+v",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "V"
        }
      },
      {
        "key": "shift+w",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "W"
        }
      },
      {
        "key": "shift+x",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "X"
        }
      },
      {
        "key": "shift+y",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "Y"
        }
      },
      {
        "key": "shift+z",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "Z"
        }
      },
      {
        "key": "space",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": " "
        }
      },
      {
        "key": "t",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "t"
        }
      },
      {
        "key": "u",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "u"
        }
      },
      {
        "key": "up",
        "command": "groog.cursorUp",
        "when": "editorTextFocus \u0026\u0026 !suggestWidgetVisible"
      },
      {
        "key": "up",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus \u0026\u0026 suggestWidgetVisible"
      },
      {
        "key": "up",
        "command": "editor.action.previousMatchFindAction",
        "when": "groog.findMode"
      },
      {
        "key": "up",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inQuickOpen"
      },
      {
        "key": "v",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "v"
        }
      },
      {
        "key": "w",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "w"
        }
      },
      {
        "key": "x",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "x"
        }
      },
      {
        "key": "y",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "y"
        }
      },
      {
        "key": "z",
        "command": "groog.type",
        "when": "editorTextFocus || findInputFocussed",
        "args": {
          "text": "z"
        }
      }
    ]
  }
}
